{"version":3,"sources":["../src/app.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","dbDelete","dbSelect","dbInsert","dbUpdate","classify","authentication","app","set","join","__dirname","use","json","urlencoded","extended","static","req","res","next","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,UAAUF,QAAQ,eAAR,CAAd;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;AACA,IAAII,eAAeJ,QAAQ,eAAR,CAAnB;AACA,IAAIK,aAAaL,QAAQ,aAAR,CAAjB;;AAEA;AACA,IAAIM,WAAWN,QAAQ,oBAAR,CAAf;AACA,IAAIO,WAAWP,QAAQ,mBAAR,CAAf;AACA,IAAIQ,WAAWR,QAAQ,mBAAR,CAAf;AACA,IAAIS,WAAWT,QAAQ,mBAAR,CAAf;AACA,IAAIU,WAAWV,QAAQ,6BAAR,CAAf;AACA,IAAIW,iBAAiBX,QAAQ,yBAAR,CAArB;;AAEA,IAAIY,MAAMb,SAAV;;AAEA;AACAa,IAAIC,GAAJ,CAAQ,OAAR,EAAiBZ,KAAKa,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACAD,IAAII,GAAJ,CAAQd,QAAQD,KAAKa,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,aAA/B,CAAR,CAAR;AACAH,IAAII,GAAJ,CAAQb,OAAO,KAAP,CAAR;AACAS,IAAII,GAAJ,CAAQX,WAAWY,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQX,WAAWa,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQZ,cAAR;AACAQ,IAAII,GAAJ,CAAQjB,QAAQqB,MAAR,CAAenB,KAAKa,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA;AACAH,IAAII,GAAJ,CAAQ,SAAR,EAAmBV,QAAnB;AACAM,IAAII,GAAJ,CAAQ,SAAR,EAAmBT,QAAnB;AACAK,IAAII,GAAJ,CAAQ,SAAR,EAAmBR,QAAnB;AACAI,IAAII,GAAJ,CAAQ,SAAR,EAAmBP,QAAnB;AACAG,IAAII,GAAJ,CAAQ,iBAAR,EAA2BL,cAA3B;AACAC,IAAII,GAAJ,CAAQ,WAAR,EAAqBN,QAArB;;AAEA;AACAE,IAAII,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACFD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAZ,IAAII,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIT,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIS,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBrB,GAAjB","file":"app.js","sourcesContent":["let express = require('express');\nlet path = require('path');\nlet favicon = require('serve-favicon');\nlet logger = require('morgan');\nlet cookieParser = require('cookie-parser');\nlet bodyParser = require('body-parser');\n\n//Sets up the server API\nlet dbDelete = require('./models/dbDeletes');\nlet dbSelect = require('./models/dbSelect');\nlet dbInsert = require('./models/dbInsert');\nlet dbUpdate = require('./models/dbUpdate');\nlet classify = require('./models/textClassification');\nlet authentication = require('./models/authentication');\n\nlet app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\n// uncomment after placing your favicon in /public\napp.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n//These are the routes that will be used for the above API\napp.use('/delete', dbDelete);\napp.use('/select', dbSelect);\napp.use('/insert', dbInsert);\napp.use('/update', dbUpdate);\napp.use('/authentication', authentication);\napp.use('/classify', classify);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n    let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}