{"version":3,"sources":["../../src/models/dbInsert.js"],"names":["express","require","mysql","router","Router","CryptoJS","AES","pool","createPool","host","user","password","database","post","req","res","username","body","email","passwrd","phoneNum","city","gender","DOB","userType","secretkey","getConnection","err","connection","query","results","json","release","companyName","ownerName","yearEst","companyNum","companyEmail","description","isOpen","address","latitude","longitude","categoryID","userID","fields","result","monday","tuesday","wednesday","thursday","friday","saturday","sunday","businessID","reviewTitle","parseInt","Stars","ReviewText","module","exports"],"mappings":"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","file":"dbInsert.js","sourcesContent":["const express = require('express');\nconst mysql = require('mysql');\nconst router = express.Router();\nconst CryptoJS = require(\"crypto-js\");\nconst AES = require(\"crypto-js/aes\");\n\n//Data used to create connection to the database\nlet pool = mysql.createPool({\n    host: '127.0.0.1',\n    user: 'root',\n    password: 'TLGjb18!',\n    database: 'LittleGuys1'\n});\n\n//Used to insert new user into the Users table\nrouter.post('/UserTable', function(req, res) {\n    let username= req.body.username;\n    let email= req.body.email;\n    let passwrd= req.body.passwrd;\n    let phoneNum= req.body.phoneNum;\n    let city= req.body.city;\n    let gender= req.body.gender;\n    let DOB= req.body.DOB;\n    let userType =req.body.userType;\n    let secretkey = 'secretkey123';\n    pool.getConnection(function(err, connection) {\n        connection.query(\"INSERT INTO Users(username, email, passwrd, phoneNum, city, gender, DOB, userType) VALUES (? , ? , AES_ENCRYPT(? ,?), ?, ?, ? ,? ,?);\", [req.body.username, req.body.email, req.body.passwrd, secretkey, req.body.phoneNum, req.body.city, req.body.gender, req.body.DOB, req.body.userType], function (err, results) {\n            if (!err) {\n                res.json('success');\n            } else {\n                res.json(err);\n            }\n            connection.release();\n        });\n    });\n});\n\n//Inserts new business into the Business table\nrouter.post('/BusinessTable', function(req, res) {\n\n    pool.getConnection(function(err, connection) {\n        //Insert into business table\n        connection.query(\"INSERT INTO Business(companyName, ownerName, yearEst, companyNum, companyEmail, description, isOpen, address, latitude, longitude, categoryID, userID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);\", [req.body.companyName, req.body.ownerName, req.body.yearEst, req.body.companyNum, req.body.companyEmail, req.body.description, req.body.isOpen, req.body.address, req.body.latitude, req.body.longitude, req.body.categoryID, req.body.userID], function (err, fields) {\n            if (err) throw err;\n            //Select to get the businessID\n            connection.query(\"SELECT businessID FROM Business WHERE companyName = '\" + req.body.companyName + \"';\", function (err, result) {\n                if (!err) {\n                    //Inserts into the openhours table\n                    pool.query(\"INSERT INTO OpenHours(monday, tuesday, wednesday, thursday, friday, saturday, sunday, businessID) VALUES (?, ?, ?, ?, ?, ?, ?, ?); \", [req.body.monday, req.body.tuesday, req.body.wednesday, req.body.thursday, req.body.friday, req.body.saturday, req.body.sunday, result[0].businessID], function (err, fields) {\n                        if (!err) {\n                            res.json('success');\n                        } else {\n                            res.json('fail');\n                        }\n                    });\n                } else {\n                    res.json('fail');\n                }\n            });\n        });\n        connection.release();\n    });\n});\n\n//Inserts new review into the Review table\nrouter.post('/review', function(req, res) {\n    let post = req.body;\n    pool.getConnection(function(err, connection) {\n        connection.query(\"INSERT INTO Reviews(ReviewTitle, ReviewDate, Stars, ReviewText, businessID, userID) VALUES (?, now(), ?, ?, ?, ?)\", [req.body.reviewTitle, parseInt(req.body.Stars), req.body.ReviewText, req.body.businessID, req.body.userID], function (err, fields) {\n            if (!err) {\n                res.json('success');\n            } else {\n                res.json('fail');\n            }\n            connection.release();\n        });\n    });\n});\n\nmodule.exports = router;"]}